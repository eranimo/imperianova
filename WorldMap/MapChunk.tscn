[gd_scene load_steps=13 format=2]

[ext_resource path="res://WorldMap/MapChunk/MapChunk.gd" type="Script" id=1]
[ext_resource path="res://addons/zylann.hterrain/hterrain_texture_set.gd" type="Script" id=2]
[ext_resource path="res://addons/zylann.hterrain/hterrain.gd" type="Script" id=3]
[ext_resource path="res://WorldMap/textures/sand.png" type="Texture" id=4]
[ext_resource path="res://WorldMap/textures/grass.png" type="Texture" id=5]
[ext_resource path="res://WorldMap/textures/water.png" type="Texture" id=6]

[sub_resource type="Resource" id=1]
script = ExtResource( 2 )
mode = 0
textures = [ [ ExtResource( 5 ), ExtResource( 4 ), ExtResource( 6 ) ], [ null, null, null ] ]

[sub_resource type="CubeMesh" id=2]
size = Vector3( 512, 0.1, 512 )

[sub_resource type="Shader" id=3]
code = "shader_type spatial;
render_mode blend_mix, specular_phong;

uniform float speed : hint_range(-1,1) = 0.0;

//colors
uniform sampler2D noise1; //add Godot noise here
uniform sampler2D noise2; //add Godot noise here
uniform sampler2D normalmap : hint_normal; //add Godot noise here, enable as_normalmap
uniform vec4 color : hint_color;
uniform vec4 edge_color : hint_color;

//foam
uniform float edge_scale = 0.25;
uniform float near = 0.1;
uniform float far = 100f;

//waves
uniform vec2 wave_strengh = vec2(0.5, 0.25);
uniform vec2 wave_frequency = vec2(12.0, 12.0);
uniform vec2 time_factor = vec2(1.0, 2.0);



float rim(float depth){
	depth = 2f * depth - 1f;
	return near * far / (far + depth * (near - far));
}


float waves(vec2 pos, float time){
	return (wave_strengh.y * sin(pos.y * wave_frequency.y + time * time_factor.y)) + (wave_strengh.x * sin(pos.x * wave_frequency.x + time * time_factor.x));
}


void vertex(){
	VERTEX.y += waves(VERTEX.xy, TIME);
}


void fragment(){
	float time = TIME * speed;
	vec3 n1 = texture(noise1, UV + time).rgb;
	vec3 n2 = texture(noise2, UV - time * 0.2).rgb;
	
	vec2 uv_movement = UV * 4f;
	uv_movement += TIME * speed * 4f;
	
	float sum = (n1.r + n2.r) - 1f;
	
	
	float z_depth = rim(texture(DEPTH_TEXTURE, SCREEN_UV).x);
	float z_pos = rim(FRAGCOORD.z);
	float diff = z_depth - z_pos;
	
	vec2 displacement = vec2(sum * 0.05);
	diff += displacement.x * 50f;
	
	
	vec4 col = mix(edge_color, color, step(edge_scale, diff));
	
	vec4 alpha = vec4(1.0);
	alpha = texture(SCREEN_TEXTURE, SCREEN_UV + displacement);
	
	
	float fin = 0.0;
	if (sum > 0.0 && sum < 0.4) fin = 0.1;
	if (sum > 0.4 && sum < 0.8) fin = 0.0;
	if (sum > 0.8) fin = 1f;
	
	ALBEDO = vec3(fin) + mix(alpha.rgb, col.rgb, color.a);
	
	NORMALMAP = texture(normalmap, uv_movement).rgb;
	ROUGHNESS = 0.1;
	SPECULAR = 1f;
}"

[sub_resource type="OpenSimplexNoise" id=4]
period = 3.0

[sub_resource type="NoiseTexture" id=5]
noise = SubResource( 4 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 3 )
shader_param/speed = 0.0
shader_param/color = Color( 0.0313726, 0.388235, 0.764706, 0.176471 )
shader_param/edge_color = Color( 0, 0, 0, 1 )
shader_param/edge_scale = 0.25
shader_param/near = 0.1
shader_param/far = 20.0
shader_param/wave_strengh = Vector2( 0.5, 0.25 )
shader_param/wave_frequency = Vector2( 12, 12 )
shader_param/time_factor = Vector2( 1, 2 )
shader_param/noise1 = SubResource( 5 )

[node name="MapChunk" type="Spatial"]
script = ExtResource( 1 )
noise_freq = 6

[node name="Terrain" type="Spatial" parent="."]
script = ExtResource( 3 )
_terrain_data = null
chunk_size = 64
collision_enabled = true
collision_layer = 1
collision_mask = 1
shader_type = "Classic4Lite"
custom_shader = null
custom_globalmap_shader = null
texture_set = SubResource( 1 )
shader_params/u_ground_uv_scale = 20.0
shader_params/u_depth_blending = true
shader_params/u_triplanar = false
shader_params/u_tile_reduction = Plane( 0, 0, 0, 0 )

[node name="Water" type="CSGMesh" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 256, 0, 256 )
visible = false
mesh = SubResource( 2 )
material = SubResource( 6 )
